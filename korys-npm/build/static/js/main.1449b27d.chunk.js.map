{"version":3,"sources":["contexts/LoginContext.js","components/ProductDetailsComponent.js","containers/ProductDetailsContainer.js","components/ProductListComponent.js","containers/ProductListContainer.js","App.js","reportWebVitals.js","components/UserComponent.js","components/UserListComponent.js","containers/UserContainer.js","components/AddProductClass.js","pages/Admin.js","pages/Product.js","index.js","pages/Registracija.js"],"names":["LoginContext","createContext","ProductDetailsComponent","props","useContext","productdetails","setProductdetails","className","style","width","src","product","imageUrl","alt","title","description","ListGroup","as","vakcinos","map","element","Item","key","pavadinimas","Badge","variant","pill","kiekis","e","reduce","a","b","to","onClick","id","ProductDetailsContainer","ProductListComponent","products","indexOf","ProductListContainer","state","api","axios","create","baseURL","setTimeout","get","response","productsFromServer","data","setState","console","log","this","length","context","Component","contextType","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserComponent","user","userName","firstName","lastName","scope","UserListComponent","users","UserContainer","usersFromServer","AddProductClass","loadProducts","addProduct","preventDefault","newProduct","formData","current","productName","value","imgNuoroda","productIMG","aprasymas","productDescription","post","res","push","createRef","Form","onSubmit","ref","Group","controlId","Label","Control","type","placeholder","name","min","Button","Table","striped","bordered","hover","item","index","Admin","Product","useState","show","setShow","nr","laisva","kabina","setKabina","handleClose","handleClick","vieta","kabinos","alert","Modal","onHide","Header","closeButton","Title","Body","Footer","NoMatch","history","AppContainer","Provider","children","ReactDOM","render","basename","process","exact","path","component","setProduct","productPrice","productQuantity","Number","max","Select","document","getElementById"],"mappings":"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","file":"static/js/main.1449b27d.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nexport const LoginContext =createContext({});","import React, { useContext } from 'react';\nimport { ListGroup, Badge } from \"react-bootstrap\";\nimport { LoginContext } from '../contexts/LoginContext';\nimport { Link } from 'react-router-dom';\n\n\nfunction ProductDetailsComponent(props) {\n\n    // const { cart, setCart, setProductdetails } = useContext(LoginContext);\n    const { productdetails, setProductdetails } = useContext(LoginContext);\n\n    // var needsDefaultImage = props.product.imageUrl!==null?false:true;\n    // var needsDefaultDescription = props.product.description!==\"\"?false:true;\n    return (\n        <div className=\"card\" style={{ width: \"18 rem\" }}>\n            <img src={props.product.imageUrl} className=\"card-img-top\" alt=\"item\"></img>\n            <div className=\"card-body \">\n                <h5 className=\"card-title\">{props.product.title}</h5>\n                <p className=\"card-text\">{props.product.description}</p>\n                <p className=\"card-text\">Turimos vakcinos:</p>\n                <ListGroup as=\"ol\" >\n                    {\n                        productdetails.vakcinos.map(element => {\n                            // this.state.products.map((item, index) => {\n                            return (\n                                <ListGroup.Item key={element.pavadinimas}\n                                    as=\"li\"\n                                    className=\"d-flex justify-content-between align-items-start\"\n                                >\n                                    <div className=\"ms-2 me-auto\">\n                                        <div className=\"fw-bold\">{element.pavadinimas}</div>\n                                    </div>\n                                    <Badge variant=\"primary\" pill>\n                                        {element.kiekis}\n                                    </Badge>\n                                </ListGroup.Item>\n\n                            )\n                        })\n                    }\n                    <ListGroup.Item key=\"bendras\"\n                                    as=\"li\"\n                                    className=\"d-flex justify-content-between align-items-start\"\n                                >\n                                    <div className=\"ms-2 me-auto\">\n                                        <div className=\"fw-bold\">Bendras vakcinų kiekis:</div>\n                                    </div>\n                                    <Badge variant=\"primary\" pill>\n                                    {productdetails.vakcinos.map(e => e.kiekis).reduce((a, b) => a + b, 0)}\n                                    </Badge>\n                                </ListGroup.Item>\n\n                </ListGroup>\n\n                <Link to={`/registracija`} >\n                    <button className=\"btn btn-primary\" onClick={() => setProductdetails(props.product)} >Registruoti pacientą</button>\n                </Link>\n                <Link to={`/${props.id}`} >\n                    <button className=\"btn btn-primary\" onClick={() => setProductdetails(props.product)}>Daugiau</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\nexport default ProductDetailsComponent;\n\n","import 'bootstrap';\nimport ProductDetailsComponent from \"../components/ProductDetailsComponent\";\nimport React from \"react\";\n\nconst ProductDetailsContainer = props => {\n    \n        return (\n            \n                    <ProductDetailsComponent product= {props.product} id={(props.id)}/>\n              \n        );\n}\nexport default ProductDetailsContainer","import React from \"react\";\nimport ProductDetailsContainer from \"../containers/ProductDetailsContainer\"\n\n\nconst ProductListComponent = props => {\n    let products = props.products;\n    return (\n        <div className=\"container \">\n        <div className=\"row\">\n                {props.products.map(product => (\n                    <div key={(props.products.indexOf(product))}  className=\"col-4\">\n                        <ProductDetailsContainer product={product} id={(products.indexOf(product))}/>\n                    </div>\n                ))}\n            </div>\n            </div>\n        )\n}\n\nexport default ProductListComponent","\nimport React, { Component } from \"react\";\nimport ProductListComponent from \"../components/ProductListComponent\";\nimport axios from 'axios';\nimport { LoginContext } from '../contexts/LoginContext';\n\n// axios.get('https://itpro2017.herokuapp.com/api/products')\n// .then( (response) => {\n// console.log(response);\n// })\n// .catch( (error) => {\n// console.log(error);\n// });\n\n\nclass ProductListContainer extends Component {\n    static contextType=LoginContext;\n    constructor() {\n        super();\n        this.state = {\n            products: [],\n        };\n        this.api = axios.create({\n            baseURL: \"http://localhost:8081/korys-war/vakcinacija/centrai/\"\n        });\n\n    }\n\n    componentDidMount() {\n        const loadProducts = async () => {\n            const response = await this.api.get(\"/\");\n            // console.log(\"state \");\n            // console.log(response);\n            const productsFromServer = response.data;\n            // console.log(\"from service \");\n            // console.log(productsFromServer);\n            \n            this.setState({ products: productsFromServer });\n            // console.log(\"state \");\n            // console.log(this.state.products);\n            \n        }\n        setTimeout(loadProducts, 1000);\n        console.log(this.state.products);\n        if(this.state.products.length===0){\n            const context=this.context;\n            this.setState({products: [context.productdetails]})\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <ProductListComponent products={this.state.products} />\n                </div>\n            </div>\n        );\n    }\n}\nexport default ProductListContainer","\nimport './App.css';\nimport React  from 'react';\nimport ProductListContainer from './containers/ProductListContainer';\n// import ServicesContext from './ServicesContext';\n// import Login from './components/Login';\n// import ShowUser from './components/ShowUser';\n// import { LoginContext } from './contexts/LoginContext';\n\n\nfunction App() {\n  // const { showusername, cart } = useContext(LoginContext);\n  return (\n    <div className=\"App\">\n      \n      <main>\n\n          <ProductListContainer />\n      </main>\n      {/* </LoginContext.Provider> */}\n    </div>\n  );\n}\n// isimta i6 package json pabaigos\n// \"devDependencies\": {\n//   \"@babel/cli\": \"^7.16.0\",\n//   \"@babel/core\": \"^7.16.5\",\n//   \"@babel/preset-env\": \"^7.16.5\"\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst UserComponent = props => {\n    console.log('in user component ');\n    console.log(props);\n    const { userName, firstName, lastName } = props.user;\n    console.log(userName);\n    return (\n        <tr>\n            <th scope=\"row\"></th>\n            <td >{userName}</td>\n            <td > {firstName}</td>\n            <td >{lastName}</td>\n            \n        </tr>\n    )\n}\nexport default UserComponent;","import React from \"react\";\nimport UserComponent from \"./UserComponent\";\n\nconst UserListComponent = ({ users }) => {\n    console.log(\"UserListComponent \");\n    console.log(users);\n\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Username</th>\n                    <th scope=\"col\">Firstname</th>\n                    <th scope=\"col\">Lastname</th>\n                </tr>\n            </thead>\n            <tbody>\n                {users.map((user) => (\n                    <UserComponent key={(users.indexOf(user))} user={user} />\n                ))}\n            </tbody>\n        </table>\n    )\n\n}\nexport default UserListComponent","\nimport UserListComponent from \"../components/UserListComponent\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\n\n// axios.get('http://localhost:8080/api/users')\n//         .then( (response) => {\n//         console.log(response);\n//         return response;\n//         })\n//         .catch( (error) => {\n//         console.log(error);\n//         });\n\nclass UserContainer extends Component {\n\n    \n    constructor() {\n        super();\n        this.state = {\n            users: []\n                // {\n                //     userName: \"loading from DB\",\n                //     firstName: \"loading from DB\",\n                //     lastName: \"loading from DB\",\n                // }\n            // ]\n        };\n        this.api = axios.create({\n            baseURL: \"http://localhost:8081/korys-app/product/list\"\n        });\n    }\n\n    componentDidMount() {\n        const loadUsers = async () => {\n            try{\n            const response = await this.api.get(\"/\");\n            // console.log(\"state \");\n            // console.log(response);\n            const usersFromServer = response.data;\n            // console.log(\"from service \");\n            // console.log(usersFromServer);\n            this.setState({ users: usersFromServer });\n            // console.log(\"state \");\n            // console.log(this.state.users);\n        }catch(error){\n            console.log(error);\n        }\n        }\n        setTimeout(loadUsers, 1000)\n    }\n\n    render() {\n        if (this.state.users !== null) {\n            return (\n                <div className=\"container-flexible\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <UserListComponent users={this.state.users} />\n                        </div>\n                    </div>\n                </div >\n            );\n        }\n        else {\n            return (\n                <div className=\"container-flexible\">\n                    <div className=\"row\">\n                        <h1>No registered users found</h1>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\nexport default UserContainer;\n","import { Form, Button, Table } from \"react-bootstrap\";\nimport React, { Component, createRef } from 'react';\nimport axios from 'axios';\n\nexport default class AddProductClass extends Component {\n    constructor() {\n        super();\n        this.state = {\n            products: [],\n        }\n        this.api = axios.create({\n            baseURL: \"http://localhost:8081/korys-npm/vakcinacija/centrai\"\n        });\n        this.loadProducts();\n        setTimeout(this.loadProducts, 1000);\n        this.formData = createRef();\n        \n\n    }\n\n    loadProducts = async () => {\n        try {\n            const response = await this.api.get(\"/\");\n            // console.log(\"state \");\n            // console.log(response);\n            const productsFromServer = response.data;\n            // console.log(\"from service \");\n            // console.log(usersFromServer);\n            this.setState({ products: productsFromServer });\n            // console.log(\"state \");\n            // console.log(this.state.products);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    addProduct = async (e) => {\n        e.preventDefault();\n\n        const newProduct = {\n            title: this.formData.current.productName.value,\n            imgNuoroda: this.formData.current.productIMG.value,\n            aprasymas: this.formData.current.productDescription.value\n        }\n        let res = await this.api.post('/', { newProduct });\n        console.log(res);\n        this.state.products.push(newProduct);\n        this.loadProducts();\n    }\n    // increment Quantity by 1\n    // incrementQuantity = (e) => {\n    //     const currentIndex = e.target.value;\n    //     this.state.products[currentIndex].productQuantity = this.state.products[currentIndex].productQuantity + 1;\n    //     this.setState({\n    //         products: this.state.products\n    //     });\n    // }\n\n    // decrement Quantity by 1\n    // decrementQuantity = (e) => {\n    //     const currentIndex = e.target.value;\n    //     if (this.state.products[currentIndex].productQuantity > 0) {\n    //         this.state.products[currentIndex].productQuantity = this.state.products[currentIndex].productQuantity - 1;\n    //         this.setState({\n    //             products: this.state.products\n    //         });\n    //     }\n    // }\n\n\n\n    render() {\n        return (\n            <div >\n                <Form onSubmit={this.addProduct} ref={this.formData} >\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicProductName\">\n                        <Form.Label>Vakcinacijos centro pavadinimas</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"pavadinimas...\" name=\"productName\" />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPrice\">\n                        <Form.Label>Nuoroda į paveiksliuką</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"nuoroda...\" name=\"imgNuoroda\" />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicQuantity\">\n                        <Form.Label>Aprašymas</Form.Label>\n                        <Form.Control type=\"text\" min=\"0\" placeholder=\"aprašymas- ne mažiau kaip 6 žodžiai...\" name=\"aprasymas\" />\n                    </Form.Group >\n                    <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n                        Pridėti į sąrašą\n                    </Button>\n                </Form>\n                <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th>Nr.</th>\n                            <th>Pavadinimas</th>\n                            <th>Nuoroda</th>\n                            <th>Aprašymas</th>\n                            {/* <th>-</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.products.map((item, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td>{index + 1}</td>\n                                        <td>{item.title}</td>\n                                        <td>{item.imgNuoroda}</td>\n                                        <td>{item.aprasymas}</td>\n                                        {/* <td>\n                                            <Button variant=\"success\" onClick={(e) => this.incrementQuantity(e)}\n                                                value={index} >+</Button>\n                                            <Button variant=\"danger\" onClick={(e) => this.decrementQuantity(e)}\n                                                value={index}\n                                            >-</Button>\n                                        </td> */}\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </Table>\n            </div >\n\n        )\n\n    };\n}","import React, {Component} from 'react';\nimport UserContainer from '../containers/UserContainer';\nimport AddProductClass from '../components/AddProductClass';\n\nclass Admin extends Component {\n    render() {\n        return (\n            <div >\n                <header className=\"px-3 text-center\">\n                    <h2>Puslapio administravimas   </h2>\n                </header>\n                <main className=\"px-3\">\n                    <h3>Vakcinacijos centrai</h3>\n                    <AddProductClass />\n                    <h3>Registruoti pacientai</h3>\n                    <UserContainer />\n                </main>\n            </div>\n        );\n    }\n}\n\n\nexport default Admin;","import { Form, Button, Table, Modal } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport React, { useContext, useState } from 'react';\nimport { LoginContext } from '../contexts/LoginContext';\n// import Login from '../components/Login';\n// import ShowUser from '../components/ShowUser';\n\nfunction Product() {\n    const [show, setShow] = useState(false);\n    const [kabina, setKabina] = useState({\n        nr:0,\n        laisva:false,\n    });\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n   \n\n    // const { cart, setCart, productdetails, showusername} = useContext(LoginContext);\n    const { productdetails, setProductdetails } = useContext(LoginContext);\n    \n\n    const handleClick = (element) => {\n\n        handleShow();\n        setKabina(element\n            // nr:element.nr,\n            // laisva:!element.laisva\n        );\n        console.log(element)\n    }\n    const keistiStatusa = () => {\n        console.log(\"hghg\");\n        var newProduct=productdetails;\n        console.log(newProduct);\n        var kabinos = newProduct.kabinos;\n        console.log(kabina);\n        var index =kabinos.indexOf(kabina);\n        console.log(index);\n        if (index !==-1){\n            kabinos[index]={\n                nr:kabina.nr,\n                laisva:!kabina.laisva,\n            }\n        }\n        console.log(kabinos);\n        setProductdetails(newProduct);\n        console.log(productdetails);\n        handleClose();\n    }\n\n    return (\n        <div>\n\n            <div className=\"card\" style={{ width: \"18 rem\" }}>\n                <h1>{productdetails.title} </h1>\n\n                <img src={productdetails.imageUrl} className=\"card-img-top\" alt=\"item\"></img>\n                <div className=\"card-body \">\n                    <h5 className=\"card-title\">{productdetails.title}</h5>\n                    <p className=\"card-text\">{productdetails.description}</p>\n                    <p className=\"card-text\">Centro vieta: {productdetails.vieta} </p>\n                    <Link to='/pages/Admin' >\n                        <button className=\"btn btn-primary\" >Pakeisti vietą</button>\n                    </Link>\n                    <p className=\"card-text\">Turimos vakcinos: </p>\n                    <Table striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <th>Vakcina</th>\n                                <th>Kiekis</th>\n\n                                {/* <th>-</th> */}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                productdetails.vakcinos.map(element => {\n                                    // this.state.products.map((item, index) => {\n                                        \n                                    return (\n                                        <tr key={element.pavadinimas}>\n                                            <td>{element.pavadinimas}</td>\n                                            <th>{element.kiekis}</th>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                    <p className=\"card-text\">Kabinos: </p>\n                    <Table striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <th>Kabinos nr.</th>\n                                <th>Statusas</th>\n                                <th>Pakeisti statusą</th>\n                                <th>Pašalinti</th>\n\n                                {/* <th>-</th> */}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                productdetails.kabinos.map(element => {\n                                    // this.state.products.map((item, index) => {\n                                        \n                                    return (\n                                        <tr key={element.nr}>\n                                            <td>{element.nr}</td>\n                                            <th>{element.laisva ? \"Laisva\" : \"Užimta\"}</th>\n                                            <td>\n                                                <Button variant=\"danger\" onClick={()=>handleClick(element)}\n                                                >Pakeisti statusą</Button>\n                                            </td>\n                                            <td>\n                                                <Button variant=\"danger\" onClick={()=>alert(\"Ar tikrai norite panaikinti kabiną?\")}\n                                                >-</Button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Įspėjimas</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Ar tikrai norite pakeisti kabinos statusą?</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={keistiStatusa}>\n                                Keisti\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Nekeisti\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                    <Form  >\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicProductName\">\n                            <Form.Label>Kabinos nr.</Form.Label>\n                            <Form.Control type=\"number\" name=\"productName\" />\n                        </Form.Group>\n\n                        <Button className=\"mb-3\" variant=\"primary\" type=\"submit\">\n                            Pridėti į sąrašą\n                        </Button>\n                    </Form>\n                    <Link to={`/registracija`} >\n                        <button className=\"btn btn-primary\" onClick={() => setProductdetails(productdetails)} >Registruoti pacientą</button>\n                    </Link>\n                    <Link to='/' >\n                        <button className=\"btn btn-primary\"onClick={() => setProductdetails(productdetails)} >Grįžti</button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Product;","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js';\nimport React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Switch,  Route } from 'react-router';\nimport { BrowserRouter, Link } from 'react-router-dom';\n// import { useParams, useLocation, useHistory, useRouteMatch } \n//         from 'react-router-dom';\nimport Admin from './pages/Admin';\n// import { Helmet } from \"react-helmet\";\nimport Product from './pages/Product';\nimport Registracija from './pages/Registracija';\nimport {LoginContext} from './contexts/LoginContext';\n\n// const TITLE = 'My Page Title';\n\n\n\nvar NoMatch = (props) => {\n  var goApp = () => props.history.push(\"/\");\n  return <div>Route did not match\n    <button onClick={goApp}>Go Home</button></div>;\n};\n\n// var DemonstruotiNavigacija = () => {\n//   let location = useLocation();\n//   let history = useHistory();\n//   let goHome = () => history.push(\"/\");\n//   let params = useParams();\n//   let match = useRouteMatch();\n//   let { id } = useParams(); // arba match.params\n//   return (\n//     <div>\n//       At route: {location.pathname} (ID: {id})\n//       <button onClick={goHome}>Go Home</button>\n//       <pre>\n//         {JSON.stringify(history, null, 2)}<br />\n//         {JSON.stringify(location, null, 2)}<br />\n//         {JSON.stringify(match, null, 2)}<br />\n//         {JSON.stringify(params, null, 2)}\n//       </pre>\n//     </div>\n//   );\n// };\n\nvar AppContainer = (props) => {\n  // const [showusername, setShowusername] = useState(false);\n  // const [username, setUsername] = useState(\"\");\n  // const [cart, setCart] = useState(0);\n  \n  const [productdetails, setProductdetails] = useState({\n    id: 0,\n    title: 'Vakcinacijos centras',\n    imageUrl: \"https://miro.medium.com/max/880/0*H3jZONKqRuAAeHnG.jpg\",\n    description: \"Kraunasi\",\n    vieta: \"default\",\n    kabinos: [\n      {\n        nr: 1,\n        laisva: true,\n      },\n      {\n        nr: 2,\n        laisva: false,\n      },\n      {\n        nr: 3,\n        laisva: true,\n      }\n    ],\n    vakcinos: [\n      {\n        pavadinimas:\"Moderna (Spikevax)\",\n        kiekis: 1,\n      },\n      {\n        pavadinimas:\"Pfizer–BioNTech (Comirnaty)\",\n        kiekis: 2,\n      },\n      {\n        pavadinimas:\"Oxford–AstraZeneca (Vaxzevria)\",\n        kiekis: 3,\n      },\n      {\n        pavadinimas:\"Johnson & Johnson (Janssen)\",\n        kiekis: 4,\n      },\n      {\n        pavadinimas:\"Pfizer–BioNTech (5-11 metų vaikams)\",\n        kiekis: 0,\n      },\n      \n    ]\n});\n  return (\n  <div>\n    <LoginContext.Provider value={{productdetails, setProductdetails}}>\n    <div>\n      <nav className=\"navbar navbar-light bg-light\">\n        <div className=\"container-fltuid align-start\">\n          <Link className=\"px-3\" to='/'> Vakcinacijos centrai </Link> \n          <Link className=\"px-3\" to='/pages/Admin'> Centrų sąrašo tvarkymas </Link>\n        </div>\n      </nav>\n    </div>\n    {props.children}\n    </LoginContext.Provider>\n  </div>);\n};\n\nReactDOM.render((\n  <div>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <AppContainer>\n        <Switch>\n          <Route exact path='/' component={ App } />\n          <Route path='/pages/Admin' component={ Admin } />\n          <Route path='/registracija' component={ Registracija } />\n          <Route path='/:id'  component={ Product } />\n          <Route path=\"*\" component={ NoMatch } />\n          <Route component={ NoMatch } />\n        </Switch>\n      </AppContainer>\n    </BrowserRouter>\n    {/* <Helmet>\n      <title>{TITLE}</title>\n    </Helmet> */}\n  </div>\n), document.getElementById('root'));\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Form, Button} from \"react-bootstrap\";\nimport { useState, createRef, useContext } from 'react';\nimport {LoginContext} from '../contexts/LoginContext';\nimport React from 'react';\n\n// forma naudojantis funkcijomis, ref, hooks\nexport default function AddProduct() {\n    \n    //type of data [stateData, stateUpdateFunction] = useState(initialData)\n    let initialValue = [];\n    const { productdetails, setProductdetails} = useContext(LoginContext);\n    const [products, setProduct] = useState(initialValue);\n    const formData = createRef();\n    //addproduct handler\n    const addProduct = (e) => {\n        e.preventDefault();\n        // kitas būdas paimti values iš formos\n        // const formData = e.target;\n        // const newProduct = {\n        //     productName: formData.productName.value,\n        //     productPrice: formData.productPrice.value,\n        //     productQuantity: formData.productQuantity.value\n        // }\n\n        //  būdas paimti values iš formos su react metodu createRef\n        const newProduct = {\n            productName: formData.current.productName.value,\n            productPrice: formData.current.productPrice.value,\n            productQuantity: Number(formData.current.productQuantity.value)\n        }\n        // add a new product inside products array\n        setProduct([...products, newProduct]);\n    }\n    // // increment Quantity by 1\n    // const incrementQuantity = (e) =>{\n    //     const currentIndex = e.target.value;\n    //     products[currentIndex].productQuantity= products[currentIndex].productQuantity+1;\n    //     setProduct([...products])\n    // }\n\n    // // decrement Quantity by 1\n    // const decrementQuantity = (e) =>{\n    //     const currentIndex = e.target.value;\n    //     if (products[currentIndex].productQuantity>0){\n    //     products[currentIndex].productQuantity= +products[currentIndex].productQuantity-1;\n    //     setProduct([...products])\n    //     }\n    // }\n\n    return (\n        <div>\n            <div>\n            <h1> Registracija į {productdetails.title}</h1>    \n            </div>    \n\n            <Form onSubmit={addProduct} ref={formData}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicProductName\">\n                    <Form.Label>Vardas</Form.Label>\n                    <Form.Control type=\"text\"  name=\"productName\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPrice\">\n                    <Form.Label>Pavardė</Form.Label>\n                    <Form.Control type=\"text\" name=\"productPrice\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicQuantity\">\n                    <Form.Label>Asmens kodas</Form.Label>\n                    <Form.Control type=\"number\" min=\"300000000\" max=\"499999999\"  name=\"productQuantity\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Pasirinkite vakciną</Form.Label>\n                        <Form.Select >\n                            {productdetails.vakcinos.map(element=>\n                                <option key={element.pavadinimas} >{element.pavadinimas} Turimas kiekis:{element.kiekis}</option>\n                                )}\n                            {/* <option>{productdetails.va}</option>\n                            <option>Pfizer–BioNTech (Comirnaty): {productdetails.comirnaty}</option>\n                            <option>Oxford–AstraZeneca (Vaxzevria): {productdetails.vaxzevria}</option>\n                            <option>Johnson & Johnson (Janssen): {productdetails.janssen}</option>\n                            <option>Pfizer–BioNTech (5-11 metų vaikams): {productdetails.biontech}</option> */}\n                        </Form.Select>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Pasirinkite kabiną</Form.Label>\n                        <Form.Select >\n                            {productdetails.kabinos.map(element=>\n                                <option key={element.nr} >{element.nr} Statusas:{element.laisva?\"laisva\":\"užimta\"}</option>\n                                )}\n                            {/* <option>{productdetails.va}</option>\n                            <option>Pfizer–BioNTech (Comirnaty): {productdetails.comirnaty}</option>\n                            <option>Oxford–AstraZeneca (Vaxzevria): {productdetails.vaxzevria}</option>\n                            <option>Johnson & Johnson (Janssen): {productdetails.janssen}</option>\n                            <option>Pfizer–BioNTech (5-11 metų vaikams): {productdetails.biontech}</option> */}\n                        </Form.Select>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Registruoti\n                </Button>\n\n            </Form>\n            \n        </div>\n    )\n}"],"sourceRoot":""}